// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using VertSliceOra5.Models;

namespace VertSliceOra5.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20220526143940_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MARAT")
                .HasAnnotation("Relational:Collation", "USING_NLS_COMP")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("SEQ_PERFORMANCE_CAPTURE");

            modelBuilder.HasSequence("TABLE1_SEQ");

            modelBuilder.HasSequence("TABLE2_SEQ");

            modelBuilder.Entity("VertSliceOra5.Models.Application", b =>
                {
                    b.Property<int>("ApplicantId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("APPLICANT_ID");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("APPLICATION_STATUS")
                        .HasDefaultValueSql("'N'  ");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CITY");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GENDER");

                    b.Property<decimal?>("Gpa")
                        .HasColumnType("NUMBER(2,1)")
                        .HasColumnName("GPA");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("MIDDLE_NAME");

                    b.Property<decimal?>("Points")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("POINTS");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVED_DATE");

                    b.Property<byte?>("SatMathScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_MATH_SCORE");

                    b.Property<byte?>("SatReadingScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_READING_SCORE");

                    b.Property<byte?>("SatWritingScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_WRITING_SCORE");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("STATE");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STREET_ADDRESS");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TELEPHONE");

                    b.Property<string>("TermCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("TERM_CODE");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP_CODE");

                    b.HasKey("ApplicantId");

                    b.HasIndex("TermCode");

                    b.HasIndex(new[] { "State", "LastName", "FirstName" }, "IX_APPLICANTS_STATE");

                    b.ToTable("APPLICATIONS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ApplicationsOneIndex", b =>
                {
                    b.Property<int>("ApplicantId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("APPLICANT_ID");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("APPLICATION_STATUS")
                        .HasDefaultValueSql("'N'  ");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CITY");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GENDER");

                    b.Property<decimal?>("Gpa")
                        .HasColumnType("NUMBER(2,1)")
                        .HasColumnName("GPA");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("MIDDLE_NAME");

                    b.Property<decimal?>("Points")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("POINTS");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVED_DATE");

                    b.Property<byte?>("SatMathScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_MATH_SCORE");

                    b.Property<byte?>("SatReadingScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_READING_SCORE");

                    b.Property<byte?>("SatWritingScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_WRITING_SCORE");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("STATE");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STREET_ADDRESS");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TELEPHONE");

                    b.Property<string>("TermCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("TERM_CODE");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP_CODE");

                    b.HasKey("ApplicantId")
                        .HasName("PK_APPLICATIONS_ONE");

                    b.HasIndex("TermCode");

                    b.HasIndex(new[] { "LastName" }, "IX_APPL_ONE_LAST_NAME");

                    b.ToTable("APPLICATIONS_ONE_INDEX");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ApplicationsOverIndexed", b =>
                {
                    b.Property<int>("ApplicantId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("APPLICANT_ID");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("APPLICATION_STATUS")
                        .HasDefaultValueSql("'N'  ");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CITY");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GENDER");

                    b.Property<decimal?>("Gpa")
                        .HasColumnType("NUMBER(2,1)")
                        .HasColumnName("GPA");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("MIDDLE_NAME");

                    b.Property<decimal?>("Points")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("POINTS");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("RECEIVED_DATE");

                    b.Property<byte?>("SatMathScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_MATH_SCORE");

                    b.Property<byte?>("SatReadingScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_READING_SCORE");

                    b.Property<byte?>("SatWritingScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SAT_WRITING_SCORE");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("STATE");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STREET_ADDRESS");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TELEPHONE");

                    b.Property<string>("TermCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("TERM_CODE");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP_CODE");

                    b.HasKey("ApplicantId")
                        .HasName("PK_APPLICATIONS_OVR");

                    b.HasIndex("TermCode");

                    b.HasIndex(new[] { "City" }, "IX_APPL_OVR_CITY");

                    b.HasIndex(new[] { "DateOfBirth" }, "IX_APPL_OVR_DOB");

                    b.HasIndex(new[] { "Email" }, "IX_APPL_OVR_EMAIL");

                    b.HasIndex(new[] { "FirstName" }, "IX_APPL_OVR_FIRST_NAME");

                    b.HasIndex(new[] { "LastName" }, "IX_APPL_OVR_LAST_NAME");

                    b.HasIndex(new[] { "MiddleName" }, "IX_APPL_OVR_MIDDLE_NAME");

                    b.HasIndex(new[] { "Telephone" }, "IX_APPL_OVR_PHONE");

                    b.HasIndex(new[] { "State" }, "IX_APPL_OVR_STATE");

                    b.HasIndex(new[] { "StreetAddress" }, "IX_APPL_OVR_STREET");

                    b.HasIndex(new[] { "ZipCode" }, "IX_APPL_OVR_ZIP_CODE");

                    b.ToTable("APPLICATIONS_OVER_INDEXED");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ClassStanding", b =>
                {
                    b.Property<string>("ClassStandingCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLASS_STANDING_CODE");

                    b.Property<string>("ClassStandingName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("CLASS_STANDING_NAME");

                    b.Property<string>("DegreeLevelCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DEGREE_LEVEL_CODE");

                    b.Property<byte>("RequiredCredits")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("REQUIRED_CREDITS");

                    b.HasKey("ClassStandingCode");

                    b.HasIndex("DegreeLevelCode");

                    b.ToTable("CLASS_STANDINGS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Course", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("DEPARTMENT_CODE");

                    b.Property<byte>("CourseNumber")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("COURSE_NUMBER");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(512)")
                        .HasColumnName("COURSE_DESCRIPTION");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("COURSE_TITLE");

                    b.Property<decimal>("Credits")
                        .HasColumnType("NUMBER(3,1)")
                        .HasColumnName("CREDITS");

                    b.HasKey("DepartmentCode", "CourseNumber");

                    b.ToTable("COURSES");
                });

            modelBuilder.Entity("VertSliceOra5.Models.CourseEnrollment", b =>
                {
                    b.Property<decimal>("CourseEnrollmentId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("COURSE_ENROLLMENT_ID");

                    b.Property<decimal>("CourseOfferingId")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("COURSE_OFFERING_ID");

                    b.Property<string>("GradeCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GRADE_CODE");

                    b.Property<int>("StudentId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STUDENT_ID");

                    b.HasKey("CourseEnrollmentId");

                    b.HasIndex("GradeCode");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "CourseOfferingId", "StudentId" }, "IX_COURSE_ENROLL_OFFERING");

                    b.ToTable("COURSE_ENROLLMENTS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.CourseOffering", b =>
                {
                    b.Property<decimal>("CourseOfferingId")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("COURSE_OFFERING_ID");

                    b.Property<byte>("Capacity")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CAPACITY");

                    b.Property<byte>("CourseNumber")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("COURSE_NUMBER");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("DEPARTMENT_CODE");

                    b.Property<byte>("Section")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("SECTION");

                    b.Property<string>("TermCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("TERM_CODE");

                    b.HasKey("CourseOfferingId");

                    b.HasIndex("TermCode");

                    b.HasIndex("DepartmentCode", "CourseNumber");

                    b.ToTable("COURSE_OFFERINGS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Degree", b =>
                {
                    b.Property<int>("DegreeId")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("DEGREE_ID");

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("DEGREE_NAME");

                    b.Property<string>("DegreeTypeCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("DEGREE_TYPE_CODE");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("DEPARTMENT_CODE");

                    b.HasKey("DegreeId");

                    b.HasIndex("DegreeTypeCode");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("DEGREES");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeLevel", b =>
                {
                    b.Property<string>("DegreeLevelCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DEGREE_LEVEL_CODE");

                    b.Property<string>("DegreeLevelName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DEGREE_LEVEL_NAME");

                    b.HasKey("DegreeLevelCode");

                    b.ToTable("DEGREE_LEVELS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeRequirement", b =>
                {
                    b.Property<int>("RequirementId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REQUIREMENT_ID");

                    b.Property<string>("ClassStandingCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLASS_STANDING_CODE");

                    b.Property<byte>("CourseNumber")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("COURSE_NUMBER");

                    b.Property<int>("DegreeId")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("DEGREE_ID");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("DEPARTMENT_CODE");

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("SESSION_CODE");

                    b.HasKey("RequirementId");

                    b.HasIndex("ClassStandingCode");

                    b.HasIndex("DegreeId");

                    b.HasIndex("SessionCode");

                    b.HasIndex("DepartmentCode", "CourseNumber");

                    b.ToTable("DEGREE_REQUIREMENTS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeType", b =>
                {
                    b.Property<string>("DegreeTypeCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("DEGREE_TYPE_CODE");

                    b.Property<string>("DegreeLevelCode")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DEGREE_LEVEL_CODE");

                    b.Property<string>("DegreeTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("DEGREE_TYPE_NAME");

                    b.HasKey("DegreeTypeCode");

                    b.HasIndex("DegreeLevelCode");

                    b.ToTable("DEGREE_TYPES");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Department", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("DEPARTMENT_CODE");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("DEPARTMENT_NAME");

                    b.HasKey("DepartmentCode");

                    b.ToTable("DEPARTMENTS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Grade", b =>
                {
                    b.Property<string>("GradeCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GRADE_CODE");

                    b.Property<bool?>("IncludeInGpa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasPrecision(1)
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("INCLUDE_IN_GPA")
                        .HasDefaultValueSql("1 ");

                    b.Property<decimal?>("Points")
                        .HasColumnType("NUMBER(2,1)")
                        .HasColumnName("POINTS");

                    b.HasKey("GradeCode");

                    b.ToTable("GRADES");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ImReconsignment", b =>
                {
                    b.Property<long>("PtrRecons")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("PTR_RECONS");

                    b.Property<string>("CdeInvSelect")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CDE_INV_SELECT");

                    b.Property<string>("CdeReconsContrlSelect")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CDE_RECONS_CONTRL_SELECT");

                    b.Property<string>("CdeReconsType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CDE_RECONS_TYPE");

                    b.Property<string>("CdeReserveSelect")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CDE_RESERVE_SELECT");

                    b.Property<string>("CdeStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CDE_STATUS");

                    b.Property<string>("DscCom")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DSC_COM");

                    b.Property<string>("DscStatusDtl")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2000)")
                        .HasColumnName("DSC_STATUS_DTL");

                    b.Property<DateTime?>("DteBusBooked")
                        .HasColumnType("DATE")
                        .HasColumnName("DTE_BUS_BOOKED");

                    b.Property<DateTime?>("DtmBooked")
                        .HasColumnType("DATE")
                        .HasColumnName("DTM_BOOKED");

                    b.Property<DateTime?>("DtmTrans")
                        .HasColumnType("DATE")
                        .HasColumnName("DTM_TRANS");

                    b.Property<DateTime?>("DtmUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("DTM_UPD");

                    b.Property<string>("FlgDel")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("FLG_DEL");

                    b.Property<string>("FlgIntrnl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("FLG_INTRNL");

                    b.Property<string>("IdnInvOwner")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("IDN_INV_OWNER");

                    b.Property<string>("IdnUpdByUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IDN_UPD_BY_USER");

                    b.Property<long?>("PtrCo")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("PTR_CO");

                    b.Property<long?>("PtrFromLoc")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("PTR_FROM_LOC");

                    b.Property<long?>("PtrProd")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("PTR_PROD");

                    b.Property<long?>("PtrToLoc")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("PTR_TO_LOC");

                    b.Property<string>("UomVol")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("UOM_VOL");

                    b.Property<decimal?>("ValRvp")
                        .HasColumnType("NUMBER(3,1)")
                        .HasColumnName("VAL_RVP");

                    b.Property<decimal?>("VolTrans")
                        .HasColumnType("NUMBER(14,2)")
                        .HasColumnName("VOL_TRANS");

                    b.HasKey("PtrRecons")
                        .HasName("IM_RECONSIGNMENT_PTR_RECONS");

                    b.ToTable("IM_RECONSIGNMENT");
                });

            modelBuilder.Entity("VertSliceOra5.Models.MlogTab1", b =>
                {
                    b.Property<byte[]>("ChangeVector")
                        .HasMaxLength(255)
                        .HasColumnType("RAW(255)")
                        .HasColumnName("CHANGE_VECTOR$$");

                    b.Property<string>("Description")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Dmltype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DMLTYPE$$");

                    b.Property<decimal?>("Id")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID");

                    b.Property<string>("MRow")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("M_ROW$$");

                    b.Property<decimal?>("Num")
                        .HasColumnType("NUMBER")
                        .HasColumnName("NUM");

                    b.Property<string>("OldNew")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("OLD_NEW$$");

                    b.Property<DateTime?>("Snaptime")
                        .HasColumnType("DATE")
                        .HasColumnName("SNAPTIME$$");

                    b.Property<decimal?>("Xid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("XID$$");

                    b.HasIndex(new[] { "Xid" }, "I_MLOG$_TAB1");

                    b.ToTable("MLOG$_TAB1");
                });

            modelBuilder.Entity("VertSliceOra5.Models.PerfStat", b =>
                {
                    b.Property<string>("StatName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("STAT_NAME");

                    b.Property<int?>("DisplayOrder")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("DISPLAY_ORDER");

                    b.Property<int>("Divisor")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DIVISOR")
                        .HasDefaultValueSql("1 ");

                    b.Property<string>("Units")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("UNITS");

                    b.HasKey("StatName")
                        .HasName("SYS_C007520");

                    b.ToTable("PERF_STATS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.PerformanceCaptureStat", b =>
                {
                    b.Property<short>("DataSequence")
                        .HasPrecision(5)
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("DATA_SEQUENCE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("RunNumber")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RUN_NUMBER");

                    b.Property<string>("StatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STAT_NAME");

                    b.Property<decimal>("StatValue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STAT_VALUE");

                    b.ToTable("PERFORMANCE_CAPTURE_STATS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.RupdTab1", b =>
                {
                    b.Property<byte[]>("ChangeVector")
                        .HasMaxLength(255)
                        .HasColumnType("RAW(255)")
                        .HasColumnName("CHANGE_VECTOR$$");

                    b.Property<string>("Dmltype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DMLTYPE$$");

                    b.Property<decimal?>("Id")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID");

                    b.Property<decimal?>("Snapid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("SNAPID");

                    b.ToTable("RUPD$_TAB1");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Session", b =>
                {
                    b.Property<string>("SessionCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("SESSION_CODE");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("SESSION_NAME");

                    b.HasKey("SessionCode")
                        .HasName("PL_SESSIONS");

                    b.ToTable("SESSIONS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STUDENT_ID");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CITY");

                    b.Property<string>("ClassStandingCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLASS_STANDING_CODE");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<int>("DegreePursued")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("DEGREE_PURSUED");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("EnrollmentTerm")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("ENROLLMENT_TERM");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GENDER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("MIDDLE_NAME");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("STATE");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STREET_ADDRESS");

                    b.Property<string>("StudentStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("STUDENT_STATUS");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TELEPHONE");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ZIP_CODE");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassStandingCode");

                    b.HasIndex("DegreePursued");

                    b.HasIndex("EnrollmentTerm");

                    b.HasIndex(new[] { "State" }, "IX_STUDENTS_NAME_STATE")
                        .HasFilter("UPPER(\"LAST_NAME\")");

                    b.ToTable("STUDENTS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Tab1", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal?>("Num")
                        .HasColumnType("NUMBER")
                        .HasColumnName("NUM");

                    b.HasKey("Id");

                    b.ToTable("TAB1");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Tab1Mv", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal>("Id")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID");

                    b.Property<decimal?>("Num")
                        .HasColumnType("NUMBER")
                        .HasColumnName("NUM");

                    b.ToView("TAB1_MV");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Table2", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID");

                    b.Property<string>("Testtbid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TESTTBID");

                    b.HasKey("Id");

                    b.ToTable("TABLE2");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Term", b =>
                {
                    b.Property<string>("TermCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("TERM_CODE");

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("SESSION_CODE");

                    b.Property<byte>("Year")
                        .HasPrecision(4)
                        .HasColumnType("NUMBER(4)")
                        .HasColumnName("YEAR");

                    b.HasKey("TermCode");

                    b.HasIndex("SessionCode");

                    b.ToTable("TERMS");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Test", b =>
                {
                    b.Property<decimal?>("Col1")
                        .HasColumnType("NUMBER")
                        .HasColumnName("COL1");

                    b.Property<decimal?>("Col2")
                        .HasColumnType("NUMBER")
                        .HasColumnName("COL2");

                    b.ToTable("TEST");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Test2", b =>
                {
                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("SESSION_CODE");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("SESSION_NAME");

                    b.ToView("TEST2");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Testtb", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Column2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("COLUMN2");

                    b.HasKey("Id");

                    b.ToTable("TESTTB");
                });

            modelBuilder.Entity("VertSliceOra5.Models.VStudentGrade", b =>
                {
                    b.Property<byte>("CourseNumber")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("COURSE_NUMBER");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("COURSE_TITLE");

                    b.Property<decimal>("Credits")
                        .HasColumnType("NUMBER(3,1)")
                        .HasColumnName("CREDITS");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("DEPARTMENT_CODE");

                    b.Property<string>("GradeCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GRADE_CODE");

                    b.Property<decimal?>("Points")
                        .HasColumnType("NUMBER(2,1)")
                        .HasColumnName("POINTS");

                    b.Property<int>("StudentId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STUDENT_ID");

                    b.Property<string>("TermCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("TERM_CODE");

                    b.ToView("V_STUDENT_GRADES");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Application", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Term", "TermCodeNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("TermCode")
                        .HasConstraintName("FK_APPLICATIONS_TERM_CODE");

                    b.Navigation("TermCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ApplicationsOneIndex", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Term", "TermCodeNavigation")
                        .WithMany("ApplicationsOneIndices")
                        .HasForeignKey("TermCode")
                        .HasConstraintName("FK_APPLICATIONS_ONE_TERM_CODE");

                    b.Navigation("TermCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ApplicationsOverIndexed", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Term", "TermCodeNavigation")
                        .WithMany("ApplicationsOverIndexeds")
                        .HasForeignKey("TermCode")
                        .HasConstraintName("FK_APPLICATIONS_OVR_TERM_CODE");

                    b.Navigation("TermCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ClassStanding", b =>
                {
                    b.HasOne("VertSliceOra5.Models.DegreeLevel", "DegreeLevelCodeNavigation")
                        .WithMany("ClassStandings")
                        .HasForeignKey("DegreeLevelCode")
                        .HasConstraintName("FK_CLASS_STDGS_DEGREE_LEVEL_CD")
                        .IsRequired();

                    b.Navigation("DegreeLevelCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Course", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Department", "DepartmentCodeNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentCode")
                        .HasConstraintName("FK_COURSES_DEPARTMENT_CODE")
                        .IsRequired();

                    b.Navigation("DepartmentCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.CourseEnrollment", b =>
                {
                    b.HasOne("VertSliceOra5.Models.CourseOffering", "CourseOffering")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("CourseOfferingId")
                        .HasConstraintName("FK_ENROLLMENTS_OFFERINGS")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Grade", "GradeCodeNavigation")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("GradeCode")
                        .HasConstraintName("FK_ENROLLMENTS_GRADES");

                    b.HasOne("VertSliceOra5.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_ENROLLMENTS_STUDENT")
                        .IsRequired();

                    b.Navigation("CourseOffering");

                    b.Navigation("GradeCodeNavigation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("VertSliceOra5.Models.CourseOffering", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Term", "TermCodeNavigation")
                        .WithMany("CourseOfferings")
                        .HasForeignKey("TermCode")
                        .HasConstraintName("FK_COURSE_OFFERINGS_TERM")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Course", "Course")
                        .WithMany("CourseOfferings")
                        .HasForeignKey("DepartmentCode", "CourseNumber")
                        .HasConstraintName("FK_COURSE_OFFERINGS_COURSES")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("TermCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Degree", b =>
                {
                    b.HasOne("VertSliceOra5.Models.DegreeType", "DegreeTypeCodeNavigation")
                        .WithMany("Degrees")
                        .HasForeignKey("DegreeTypeCode")
                        .HasConstraintName("FK_DEGREES_DEGREE_TYPE_CODE")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Department", "DepartmentCodeNavigation")
                        .WithMany("Degrees")
                        .HasForeignKey("DepartmentCode")
                        .HasConstraintName("FK_DEGREES_DEPARTMENT_CODE")
                        .IsRequired();

                    b.Navigation("DegreeTypeCodeNavigation");

                    b.Navigation("DepartmentCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeRequirement", b =>
                {
                    b.HasOne("VertSliceOra5.Models.ClassStanding", "ClassStandingCodeNavigation")
                        .WithMany("DegreeRequirements")
                        .HasForeignKey("ClassStandingCode")
                        .HasConstraintName("FK_DEGREE_REQ_CLASS_STNDG_CD")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Degree", "Degree")
                        .WithMany("DegreeRequirements")
                        .HasForeignKey("DegreeId")
                        .HasConstraintName("FK_DEGREE_REQ_DEGREE_ID")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Session", "SessionCodeNavigation")
                        .WithMany("DegreeRequirements")
                        .HasForeignKey("SessionCode")
                        .HasConstraintName("FK_DEGREE_REQ_SESSION_CD")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Course", "Course")
                        .WithMany("DegreeRequirements")
                        .HasForeignKey("DepartmentCode", "CourseNumber")
                        .HasConstraintName("FK_DEGREE_REQ_COURSES")
                        .IsRequired();

                    b.Navigation("ClassStandingCodeNavigation");

                    b.Navigation("Course");

                    b.Navigation("Degree");

                    b.Navigation("SessionCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeType", b =>
                {
                    b.HasOne("VertSliceOra5.Models.DegreeLevel", "DegreeLevelCodeNavigation")
                        .WithMany("DegreeTypes")
                        .HasForeignKey("DegreeLevelCode")
                        .HasConstraintName("FK_DEGREE_TYPES_DEGREE_TYPE_CD")
                        .IsRequired();

                    b.Navigation("DegreeLevelCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Student", b =>
                {
                    b.HasOne("VertSliceOra5.Models.ClassStanding", "ClassStandingCodeNavigation")
                        .WithMany("Students")
                        .HasForeignKey("ClassStandingCode")
                        .HasConstraintName("FK_STUDENTS_CLASS_STANING");

                    b.HasOne("VertSliceOra5.Models.Degree", "DegreePursuedNavigation")
                        .WithMany("Students")
                        .HasForeignKey("DegreePursued")
                        .HasConstraintName("FK_STUDENTS_DEGREE_PURSUED")
                        .IsRequired();

                    b.HasOne("VertSliceOra5.Models.Term", "EnrollmentTermNavigation")
                        .WithMany("Students")
                        .HasForeignKey("EnrollmentTerm")
                        .HasConstraintName("FK_STUDENTS_ENROLLMENT_TERM")
                        .IsRequired();

                    b.Navigation("ClassStandingCodeNavigation");

                    b.Navigation("DegreePursuedNavigation");

                    b.Navigation("EnrollmentTermNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Table2", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Testtb", "IdNavigation")
                        .WithOne("Table2")
                        .HasForeignKey("VertSliceOra5.Models.Table2", "Id")
                        .HasConstraintName("TABLE2_FK1")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Term", b =>
                {
                    b.HasOne("VertSliceOra5.Models.Session", "SessionCodeNavigation")
                        .WithMany("Terms")
                        .HasForeignKey("SessionCode")
                        .HasConstraintName("FK_SESSION_CODE")
                        .IsRequired();

                    b.Navigation("SessionCodeNavigation");
                });

            modelBuilder.Entity("VertSliceOra5.Models.ClassStanding", b =>
                {
                    b.Navigation("DegreeRequirements");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Course", b =>
                {
                    b.Navigation("CourseOfferings");

                    b.Navigation("DegreeRequirements");
                });

            modelBuilder.Entity("VertSliceOra5.Models.CourseOffering", b =>
                {
                    b.Navigation("CourseEnrollments");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Degree", b =>
                {
                    b.Navigation("DegreeRequirements");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeLevel", b =>
                {
                    b.Navigation("ClassStandings");

                    b.Navigation("DegreeTypes");
                });

            modelBuilder.Entity("VertSliceOra5.Models.DegreeType", b =>
                {
                    b.Navigation("Degrees");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Degrees");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Grade", b =>
                {
                    b.Navigation("CourseEnrollments");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Session", b =>
                {
                    b.Navigation("DegreeRequirements");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Student", b =>
                {
                    b.Navigation("CourseEnrollments");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Term", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ApplicationsOneIndices");

                    b.Navigation("ApplicationsOverIndexeds");

                    b.Navigation("CourseOfferings");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("VertSliceOra5.Models.Testtb", b =>
                {
                    b.Navigation("Table2");
                });
#pragma warning restore 612, 618
        }
    }
}
